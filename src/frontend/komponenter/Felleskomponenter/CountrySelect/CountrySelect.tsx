import { Select } from '@navikt/ds-react';
import React, { useMemo } from 'react';

interface CountrySelectProps {
    id: string;
    label: string;
    flags?: boolean;
    excludeList?: string[];
    values?: string;
    onOptionSelected: (country: { alpha2: string }) => void;
    error?: string;
}

// All ISO 3166-1 alpha-2 country codes
const COUNTRY_CODES = [
    'AF',
    'AL',
    'DZ',
    'AD',
    'AO',
    'AG',
    'AR',
    'AM',
    'AU',
    'AT',
    'AZ',
    'BS',
    'BH',
    'BD',
    'BB',
    'BY',
    'BE',
    'BZ',
    'BJ',
    'BT',
    'BO',
    'BA',
    'BW',
    'BR',
    'BN',
    'BG',
    'BF',
    'BI',
    'KH',
    'CM',
    'CA',
    'CV',
    'CF',
    'TD',
    'CL',
    'CN',
    'CO',
    'KM',
    'CG',
    'CD',
    'CR',
    'HR',
    'CU',
    'CY',
    'CZ',
    'DK',
    'DJ',
    'DM',
    'DO',
    'EC',
    'EG',
    'SV',
    'GQ',
    'ER',
    'EE',
    'ET',
    'FJ',
    'FI',
    'FR',
    'GA',
    'GM',
    'GE',
    'DE',
    'GH',
    'GR',
    'GD',
    'GT',
    'GN',
    'GW',
    'GY',
    'HT',
    'HN',
    'HU',
    'IS',
    'IN',
    'ID',
    'IR',
    'IQ',
    'IE',
    'IL',
    'IT',
    'JM',
    'JP',
    'JO',
    'KZ',
    'KE',
    'KI',
    'KP',
    'KR',
    'KW',
    'KG',
    'LA',
    'LV',
    'LB',
    'LS',
    'LR',
    'LY',
    'LI',
    'LT',
    'LU',
    'MG',
    'MW',
    'MY',
    'MV',
    'ML',
    'MT',
    'MH',
    'MR',
    'MU',
    'MX',
    'FM',
    'MD',
    'MC',
    'MN',
    'ME',
    'MA',
    'MZ',
    'MM',
    'NA',
    'NR',
    'NP',
    'NL',
    'NZ',
    'NI',
    'NE',
    'NG',
    'NO',
    'OM',
    'PK',
    'PW',
    'PA',
    'PG',
    'PY',
    'PE',
    'PH',
    'PL',
    'PT',
    'QA',
    'RO',
    'RU',
    'RW',
    'KN',
    'LC',
    'VC',
    'WS',
    'SM',
    'ST',
    'SA',
    'SN',
    'RS',
    'SC',
    'SL',
    'SG',
    'SK',
    'SI',
    'SB',
    'SO',
    'ZA',
    'SS',
    'ES',
    'LK',
    'SD',
    'SR',
    'SZ',
    'SE',
    'CH',
    'SY',
    'TW',
    'TJ',
    'TZ',
    'TH',
    'TL',
    'TG',
    'TO',
    'TT',
    'TN',
    'TR',
    'TM',
    'TV',
    'UG',
    'UA',
    'AE',
    'GB',
    'US',
    'UY',
    'UZ',
    'VU',
    'VA',
    'VE',
    'VN',
    'YE',
    'ZM',
    'ZW',
];

const CountrySelect: React.FC<CountrySelectProps> = ({
    id,
    label,
    flags = false,
    excludeList = [],
    values,
    onOptionSelected,
    error,
}) => {
    const countries = useMemo(() => {
        const displayNames = new Intl.DisplayNames(['nb'], { type: 'region' });
        return COUNTRY_CODES.filter(code => !excludeList.includes(code))
            .map(code => ({
                alpha2: code,
                name: displayNames.of(code) || code,
            }))
            .sort((a, b) => a.name.localeCompare(b.name, 'nb'));
    }, [excludeList]);

    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
        const selectedCountry = countries.find(c => c.alpha2 === event.target.value);
        if (selectedCountry) {
            onOptionSelected({ alpha2: selectedCountry.alpha2 });
        }
    };

    return (
        <Select id={id} label={label} value={values || ''} onChange={handleChange} error={error}>
            <option value="">Velg land</option>
            {countries.map(country => (
                <option key={country.alpha2} value={country.alpha2}>
                    {flags ? `üè≥Ô∏è ${country.name}` : country.name}
                </option>
            ))}
        </Select>
    );
};

export default CountrySelect;
